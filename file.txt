Useful Software Engineering Definitions:

Functional requirements: are statements of what a software system must do to meet the needs of its users. They are typically written in plain language and should be specific, measurable, achievable, relevant, and time-bound.

Non-functional requirements: specify how a software system should perform, focusing on aspects like speed, security, and usability, rather than specific features. 

Agile model: Small increments of software are developed in a sequence of sprints, each of which creates deployable code.

Waterflow model: [add definition here]

User stories: User stories are short conversational text; They consists of 2-4 sentences written by the stakeholders(in their own terminology)
in terms of what the system needs to do for them ðŸ’… 

Steps of Software Requirements Analysis:
[steps here]

Types of non-functional requirements:
- Product Requirements
    - Security Requirements
    - Dependability Requirements
    - Usability Requirements
    - Efficiency Requirements
        - Performance Requirements
        - Space Requirements
- Organizational Requirements
    - Environmental Requirements
    - Operational Requirements
    - Development Requirements
- External Requirements
    - Regulatory Requirements
    - Ethical Requirements
    - Legislative Requirements
        - Accounting Requirements
        - Safety/Security Requirements
